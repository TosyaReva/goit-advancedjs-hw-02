{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\n\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst display = {\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\nconst btnStart = document.querySelector('[data-start]');\nconst inputDate = document.querySelector('#datetime-picker');\nbtnStart.disabled = true;\n\n// const selector = '#datetime-picker';\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] > Date.now()) {\n      userSelectedDate = selectedDates[0];\n      btnStart.disabled = false;\n    } else {\n      btnStart.disabled = true;\n      iziToast.info({\n        position: 'topRight',\n        message: 'Please choose a date in the future',\n      });\n    }\n  },\n};\n\nlet userSelectedDate;\nlet intervalId;\n\nfunction startTimer() {\n  btnStart.disabled = true;\n  inputDate.disabled = true;\n  if (intervalId) {\n    clearInterval(intervalId);\n  }\n\n  intervalId = setInterval(() => {\n    const timeLeft = userSelectedDate - Date.now();\n    if (timeLeft < 0) {\n      clearInterval(intervalId);\n      intervalId = null;\n      btnStart.disabled = false;\n      inputDate.disabled = false;\n      return;\n    }\n\n    const timeLeftObject = convertMs(timeLeft);\n    Object.keys(timeLeftObject).forEach(key => {\n      display[key].innerHTML = addLeadingZero(timeLeftObject[key]);\n    });\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, 0);\n}\n\nflatpickr(inputDate, options);\nbtnStart.addEventListener('click', startTimer);\n"],"names":["display","btnStart","inputDate","options","selectedDates","userSelectedDate","iziToast","intervalId","startTimer","timeLeft","timeLeftObject","convertMs","key","addLeadingZero","ms","days","hours","minutes","seconds","value","flatpickr"],"mappings":"2GAMA,MAAMA,EAAU,CACd,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EACMC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAY,SAAS,cAAc,kBAAkB,EAC3DD,EAAS,SAAW,GAIpB,MAAME,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAI,KAAK,IAAG,GAC7BC,EAAmBD,EAAc,CAAC,EAClCH,EAAS,SAAW,KAEpBA,EAAS,SAAW,GACpBK,EAAS,KAAK,CACZ,SAAU,WACV,QAAS,oCACjB,CAAO,EAEJ,CACH,EAEA,IAAID,EACAE,EAEJ,SAASC,GAAa,CACpBP,EAAS,SAAW,GACpBC,EAAU,SAAW,GACjBK,GACF,cAAcA,CAAU,EAG1BA,EAAa,YAAY,IAAM,CAC7B,MAAME,EAAWJ,EAAmB,KAAK,IAAG,EAC5C,GAAII,EAAW,EAAG,CAChB,cAAcF,CAAU,EACxBA,EAAa,KACbN,EAAS,SAAW,GACpBC,EAAU,SAAW,GACrB,MACD,CAED,MAAMQ,EAAiBC,EAAUF,CAAQ,EACzC,OAAO,KAAKC,CAAc,EAAE,QAAQE,GAAO,CACzCZ,EAAQY,CAAG,EAAE,UAAYC,EAAeH,EAAeE,CAAG,CAAC,CACjE,CAAK,CACF,EAAE,GAAI,CACT,CAEA,SAASD,EAAUG,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASL,EAAeM,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,CAAC,CACvC,CAEAC,EAAUlB,EAAWC,CAAO,EAC5BF,EAAS,iBAAiB,QAASO,CAAU"}